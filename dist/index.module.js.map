{"version":3,"file":"index.module.js","sources":["../src/providers/ProductHomeProvider.tsx","../src/utils.ts","../src/apis.ts","../src/hooks/useFeature.ts","../src/hooks/useEvents.ts"],"sourcesContent":["// MyProvider.tsx\nimport React, { createContext, ReactNode, useState } from 'react';\n\ninterface MyContextProps {\n    publicKey?: string;\n    userId?: string;\n    identity?: (userId: string) => void;\n    anonymousId?: string;\n    // triggerEvent: (eventId:string,properties:EventProperties,featureId?:string) => void;\n}\n\nexport const ProductHouseContext = createContext<MyContextProps>({});\n\n// todo need to verify origin + publicKey\ninterface ProductHomeProviderProps {\n    publicKey: string;\n    children: ReactNode;\n}\n\nlet anonymousId = \"\";\nif (localStorage.getItem(\"p_a_id\")) {\n    anonymousId = localStorage.getItem(\"p_a_id\") as string;\n} else {\n    anonymousId = Math.random().toString(36).substring(7);\n    localStorage.setItem(\"p_a_id\", anonymousId);\n}\nconsole.log(\"provider loaded\")\nexport const ProductHomeProvider: React.FC<ProductHomeProviderProps> = ({\n    children,\n    publicKey\n}: ProductHomeProviderProps) => {\n    const [userId, setUserId] = useState<string>();\n\n    const identity = (userId: string) => {\n        setUserId(userId);\n        // TODO: We need an API for identifying to make the connection between anonymous and user\n    };\n\n    return (\n        <ProductHouseContext.Provider value={{ publicKey, userId, identity, anonymousId }}>\n            {children}\n        </ProductHouseContext.Provider>\n    );\n};\n","\n\nexport const buildEventName = (context:string,featureName:string,resource:string,action:string)=>{\n    return `${featureName}:${resource}:${action}`\n}","import {AnalyticsRequest, ProductHouseFeature} from \"./Types\";\nconst baseUrl = \"http://localhost:8005\"\n\n// todo neeed to handle no internet connection - queue?\nexport const postEvent =async  (event:AnalyticsRequest)=>{\n        console.log(\"postEvent\")\n\n    const url = baseUrl+\"/v1/analytics/events\";\n    try {\n     await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(event)\n      });\n        console.log(\"here\")\n      // const result = await response.json();\n      // setResponse(result);\n    } catch (error) {\n        console.error(\"here\",error)\n      // setError(error.toString());\n        console.warn(\"Failed to send event\",error)\n    }\n\n}\n\n\nexport const getFeatures =():ProductHouseFeature[]=>{\n    // add queryParam with base 64 context - key,user etc.\n    return []\n}\n","import {useContext} from 'react';\nimport {ProductHouseContext} from '../providers/ProductHomeProvider';\nimport {AnalyticsRequest, EventProperties} from \"../Types\";\nimport {buildEventName} from \"../utils\";\nimport {postEvent} from \"../apis\";\n\nexport const useFeature = (featureId: string) => {\n    const {publicKey, userId, identity,anonymousId} = useContext(ProductHouseContext);\n    const featureFlag = true;\n\n    const triggerEvent = (eventId: string, properties: EventProperties) => {\n    console.log(\"triggering event\")\n        const data:AnalyticsRequest = {\n            event_id: eventId,\n            feature_id: featureId,\n            properties,\n            user_id: userId,\n            anonymous_id:anonymousId,\n            key: publicKey as string\n        }\n        postEvent(data)\n            .then()\n            .catch()\n    }\n\n    return {featureFlag, triggerEvent, buildEventName, identity};\n\n};\n\n","// useMyFeature.ts\nimport {useContext} from 'react';\nimport {ProductHouseContext} from '../providers/ProductHomeProvider';\nimport {AnalyticsRequest, EventProperties} from \"../Types\";\nimport {postEvent} from \"../apis\";\nimport {buildEventName} from \"../utils\";\n\nexport const useEvents = () => {\n    const {publicKey, userId, identity, anonymousId} = useContext(ProductHouseContext);\n\n    const featureFlag = false;\n    const triggerEvent = (eventId: string, properties: EventProperties, featureId?: string) => {\n\n        const data:AnalyticsRequest = {\n            event_id: eventId,\n            feature_id: featureId,\n            properties,\n            user_id: userId,\n            anonymous_id: anonymousId,\n            key: publicKey as string\n        }\n        postEvent(data)\n            .then()\n            .catch()\n    }\n\n    return {identity,triggerEvent, buildEventName};\n\n\n};\n\n"],"names":["ProductHouseContext","createContext","anonymousId","localStorage","getItem","Math","random","toString","substring","setItem","console","log","ProductHomeProvider","_ref","children","publicKey","_useState","useState","setUserId","React","Provider","value","userId","identity","buildEventName","context","featureName","resource","action","postEvent","event","_temp","Promise","resolve","fetch","baseUrl","method","headers","body","JSON","stringify","then","_catch","error","warn","e","reject","useFeature","featureId","_useContext","useContext","featureFlag","triggerEvent","eventId","properties","event_id","feature_id","user_id","anonymous_id","key","useEvents"],"mappings":"2EAWaA,EAAsBC,EAA8B,IAQ7DC,EAAc,GACdC,aAAaC,QAAQ,UACrBF,EAAcC,aAAaC,QAAQ,WAEnCF,EAAcG,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACnDL,aAAaM,QAAQ,SAAUP,IAEnCQ,QAAQC,IAAI,mBACC,IAAAC,EAA0D,SAAvCC,GAC5B,IAAAC,EAAQD,EAARC,SACAC,EAASF,EAATE,UAEAC,EAA4BC,IAAbC,EAASF,EAAA,GAOxB,OACIG,gBAACnB,EAAoBoB,SAAS,CAAAC,MAAO,CAAEN,UAAAA,EAAWO,OARzCN,KAQiDO,SAN7C,SAACD,GACdJ,EAAUI,EAEd,EAGwEpB,YAAAA,IAC/DY,EAGb,ECzCaU,EAAiB,SAACC,EAAeC,EAAmBC,EAAgBC,GAC7E,OAAUF,EAAeC,IAAAA,EAAYC,IAAAA,CACzC,ECAaC,WAAmBC,GAAsB,IAC9CpB,QAAQC,IAAI,aAEhB,IAA2CoB,0BACvCC,QAAAC,QACGC,MAFKC,4CAEM,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUV,MACrBW,gBACA/B,QAAQC,IAAI,OAAO,4DAToB+B,CAAA,WAYlCC,GACLjC,QAAQiC,MAAM,OAAOA,GAErBjC,QAAQkC,KAAK,uBAAuBD,EACvC,UAAAX,QAAAC,QAAAF,GAAAA,EAAAU,KAAAV,EAAAU,KAAA,WAAA,QAAA,EAEL,CAAC,MAAAI,UAAAb,QAAAc,OAAAD,KCnBYE,EAAa,SAACC,GACvB,IAAAC,EAAkDC,EAAWlD,GAAtDe,EAASkC,EAATlC,UAAWO,EAAM2B,EAAN3B,OAAiBpB,EAAW+C,EAAX/C,YAkBnC,MAAO,CAACiD,aAjBY,EAiBCC,aAfA,SAACC,EAAiBC,GACvC5C,QAAQC,IAAI,oBASRkB,EAR8B,CAC1B0B,SAAUF,EACVG,WAAYR,EACZM,WAAAA,EACAG,QAASnC,EACToC,aAAaxD,EACbyD,IAAK5C,IAGJ0B,OACK,OACd,EAEmCjB,eAAAA,EAAgBD,SAlBjB0B,EAAR1B,SAoB9B,ECpBaqC,EAAY,WACrB,IAAAX,EAAmDC,EAAWlD,GAAvDe,EAASkC,EAATlC,UAAWO,EAAM2B,EAAN3B,OAAkBpB,EAAW+C,EAAX/C,YAkBpC,MAAO,CAACqB,SAlB0B0B,EAAR1B,SAkBT6B,aAfI,SAACC,EAAiBC,EAA6BN,GAUhEnB,EAR8B,CAC1B0B,SAAUF,EACVG,WAAYR,EACZM,WAAAA,EACAG,QAASnC,EACToC,aAAcxD,EACdyD,IAAK5C,IAGJ0B,cAET,EAE+BjB,eAAAA,EAGnC"}